sub closeClaw(){
//this function will open the claw by rotating motor c forward
       //RotateMotor(OUT_C, 25, 45);
       OnFwd(OUT_C,25)
}

sub openClaw(){
//closes the claw by rotating motor c backward
    RotateMotor(OUT_C, 25, -45);
}

sub avoid(){
//avaoid checks 30cm in front, it obstacle, turns 45 degrees left
    const int THRESHOLD = 30;
    
    SetSensorLowspeed(IN_2);
    if(SensorUS(IN_2) < THRESHOLD){
         Off(OUT_AB);
         RotateMotor(OUT_A, 75, 180);
    }

}

bool getTrash(){
//if the touch sensor is pressed, the claw will close locking the trash in a death grip
    SetSensorColorFull(IN_1);
    if(Sensor(IN_1)==2 || Sensor(IN_1)==4){
         closeClaw();
         return true;
    }
}

bool findDumpsite(){
//robot will rotate looking for light. If the light value is greater than the
//threshold, the robot will stop looking and move toward the light

    const int THRESHOLD = 50;    //Sets the value of the light threshold

    SetSensorLight(IN_4);
    while(Sensor(IN_4) < THRESHOLD){        //robot will spin until it finds light > threshold
         OnFwd(OUT_A, 75);
         OnRev(OUT_B, 75);
    }
    while(Sensor(IN_4) > THRESHOLD){
         OnFwd(OUT_AB,75);
         avoid();
         if(Sensor(IN_4) > 90){
             return true;
         }
    }
    

}

bool dropOff(){
    if(findDumpsite()){
        openClaw();
        //return false;
    }
}


task main(){
 //this is the main file that will eventually do shit
while(true){
     OnFwd(OUT_AB, 75);
     avoid();
     if(getTrash()){
          dropOff();   //need to reset getTrash() to false b/c it is constantly
                       //looking to drop off without trash
                       //also once the light has been located, the bot turns slow
                       //instead of moving toward the light.
     }
}

 /*openClaw();
 closeClaw();
 while(true){
 findDumpsite(); */
 
 /*while(true){
 OnFwd(OUT_AB, 75);
 //avoid();
 getTrash();
 dropOff();
 }*/
}



